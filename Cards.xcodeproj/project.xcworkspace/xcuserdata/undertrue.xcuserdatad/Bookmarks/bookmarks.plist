<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>49</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>48</string>
					<key>Timestamp</key>
					<string>731345309.638514</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Cards/Helpers/CardViewFactory.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func get(_ shape: CardType, withSize size: CGSize, andColor color: CardColor, and cover: CardCover) -&gt; UIView {
</string>
				<key>leading</key>
				<string>    
    
//</string>
				<key>trailing</key>
				<string>//        // на основе размеров определяем фрейм
//        let frame = CGRect(origin: .zero, size: size)
//        // определяем UI-цвет на основе цвета модели
</string>
			</dict>
			<key>title</key>
			<string>card Factory</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>237</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>236</string>
					<key>Timestamp</key>
					<string>731417739.300941</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Cards/Controller/BoardGameController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        game.cardTypes = self.cardTypes
</string>
				<key>leading</key>
				<string>        game.cardBackCovers = self.cardBackCovers
        game.cardColors = self.cardColors
</string>
				<key>trailing</key>
				<string>        
        if continueGame {
            game.cards = SettingsStorage.shared.cards
</string>
			</dict>
			<key>title</key>
			<string>Generate cards</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>253</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>252</string>
					<key>Timestamp</key>
					<string>731417739.300952</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Cards/Controller/BoardGameController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        var cardViews = [UIView]()
</string>
				<key>leading</key>
				<string>    private func getCardsBy(modelData: [Card]) -&gt; [UIView] {
        // хранилище для представлений карточек
</string>
				<key>trailing</key>
				<string>        // фабрика карточек
        let cardViewFactory = CardViewFactory() // перебираем массив карточек в Модели
        for (index, modelCard) in modelData.enumerated() {
</string>
			</dict>
			<key>title</key>
			<string>create new card as Views</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>25</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>24</string>
					<key>Timestamp</key>
					<string>731345900.694859</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Cards/View/Cards.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        didSet {
</string>
				<key>leading</key>
				<string>    var saveViewStageCompletionHandler: ((FlippableView) -&gt; Void)?
    var isFlipped: Bool = false {
</string>
				<key>trailing</key>
				<string>            self.setNeedsDisplay()
        }
    }
</string>
			</dict>
			<key>title</key>
			<string>CardView</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>165</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>164</string>
					<key>Timestamp</key>
					<string>731405574.837369</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Cards/View/Cards.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        // создание слоя с фигурой
</string>
				<key>leading</key>
				<string>                                             height: Int(self.bounds.height)-margin*2))
        view.addSubview(shapeView)
</string>
				<key>trailing</key>
				<string>        let shapeLayer = ShapeType(size: shapeView.frame.size, fillColor: color.cgColor)
        shapeView.layer.addSublayer(shapeLayer)
        
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>116</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>115</string>
					<key>Timestamp</key>
					<string>731405574.837383</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Cards/View/Cards.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    }
</string>
				<key>leading</key>
				<string>        saveViewStage()
        
</string>
				<key>trailing</key>
				<string>    
    override func draw(_ rect: CGRect) {
        // удаляем добавленные ранее дочерние представления
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>364</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>363</string>
					<key>Timestamp</key>
					<string>731417739.3009191</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Cards/Controller/BoardGameController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        cardViews = cards
</string>
				<key>leading</key>
				<string>            card.removeFromSuperview()
        }
</string>
				<key>trailing</key>
				<string>        // перебираем карточки
        for card in cardViews {
            if !continueGame {
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
